# (d)ocker (b)uild (t)est
name: dbt

on:
  push:
  workflow_dispatch:

jobs:
  # Comprueba si han habido cambios en el Dockerfile
  check:
    runs-on: ubuntu-latest
    # Donde se almacena el resultado de la comprobaci√≥n
    outputs:
      changed: ${{ steps.changes.outputs.container }}
    steps:
      - uses: actions/checkout@v2
        # comprueba
      - uses: dorny/paths-filter@v2
        name: Comprobando Dockerfile
        id: changes
        with:
          filters: |
            container:
              - 'Dockerfile'

  build:
    # Construye la imagen si el resultado de la comprobacion 
    # es 'true'
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v2

      - name: docker build
        if: needs.check.outputs.changed == 'true'
        run: |
          make docker-build

      - name: dockerhub login
        if: needs.check.outputs.changed == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: docker push to dockerhub
        if: needs.check.outputs.changed == 'true'
        run: |
          make docker-push

  test:
    # Ejecuta los test usando la nueva imagen
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: run tests
        run: |
          make docker-test
